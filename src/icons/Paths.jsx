import { interpolate, useTransform } from "framer-motion";

export const gamepad =
  "M175 100V78.1231C175 76.6232 175 75.8733 174.576 75.3307C174.153 74.7882 173.425 74.6063 171.97 74.2425L128.03 63.2575C126.575 62.8937 125.847 62.7118 125.424 62.1693C125 61.6267 125 60.8768 125 59.3769V25M164.5 200H185.5C186.443 200 186.914 200 187.207 199.707C187.5 199.414 187.5 198.943 187.5 198V177C187.5 176.057 187.5 175.586 187.207 175.293C186.914 175 186.443 175 185.5 175H164.5C163.557 175 163.086 175 162.793 175.293C162.5 175.586 162.5 176.057 162.5 177V198C162.5 198.943 162.5 199.414 162.793 199.707C163.086 200 163.557 200 164.5 200ZM89.5 212.5H110.5C111.443 212.5 111.914 212.5 112.207 212.207C112.5 211.914 112.5 211.443 112.5 210.5V139.5C112.5 138.557 112.5 138.086 112.207 137.793C111.914 137.5 111.443 137.5 110.5 137.5H89.5C88.5572 137.5 88.0858 137.5 87.7929 137.793C87.5 138.086 87.5 138.557 87.5 139.5V210.5C87.5 211.443 87.5 211.914 87.7929 212.207C88.0858 212.5 88.5572 212.5 89.5 212.5ZM62.5 164.5L62.5 185.5C62.5 186.443 62.5 186.914 62.7929 187.207C63.0858 187.5 63.5572 187.5 64.5 187.5H135.5C136.443 187.5 136.914 187.5 137.207 187.207C137.5 186.914 137.5 186.443 137.5 185.5V164.5C137.5 163.557 137.5 163.086 137.207 162.793C136.914 162.5 136.443 162.5 135.5 162.5H64.5C63.5572 162.5 63.0858 162.5 62.7929 162.793C62.5 163.086 62.5 163.557 62.5 164.5ZM202 175H223C223.943 175 224.414 175 224.707 174.707C225 174.414 225 173.943 225 173V152C225 151.057 225 150.586 224.707 150.293C224.414 150 223.943 150 223 150H202C201.057 150 200.586 150 200.293 150.293C200 150.586 200 151.057 200 152V173C200 173.943 200 174.414 200.293 174.707C200.586 175 201.057 175 202 175ZM106.25 250H193.75C223.07 250 237.73 250 247.829 241.546C250.429 239.37 252.756 236.831 254.751 233.995C262.5 222.978 262.5 206.985 262.5 175C262.5 143.015 262.5 127.022 254.751 116.005C252.756 113.169 250.429 110.63 247.829 108.454C237.73 100 223.07 100 193.75 100H106.25C76.9303 100 62.2705 100 52.1714 108.454C49.5715 110.63 47.2443 113.169 45.2493 116.005C37.5 127.022 37.5 143.015 37.5 175C37.5 206.985 37.5 222.978 45.2493 233.995C47.2443 236.831 49.5715 239.37 52.1714 241.546C62.2705 250 76.9303 250 106.25 250Z";
export const user =
  "M200 87.5C200 115.114 177.614 137.5 150 137.5C122.386 137.5 100 115.114 100 87.5C100 59.8858 122.386 37.5 150 37.5C177.614 37.5 200 59.8858 200 87.5Z M66.7237 229.007C74.9872 194.086 109.647 175 145.532 175H154.468C190.354 175 225.013 194.086 233.277 229.007C235.722 239.341 237.4 250.41 237.496 261.5C237.501 262.052 237.052 262.5 236.5 262.5H63.5001C62.9478 262.5 62.4997 262.052 62.5044 261.5C62.6003 250.41 64.2782 239.341 66.7237 229.007Z";
export const home =
  "M120 262.5H112.5C88.9298 262.5 77.1447 262.5 69.8223 255.178C62.5 247.855 62.5 236.07 62.5 212.5V159.495C62.5 142.523 62.5 134.037 65.9308 126.578C69.3615 119.119 75.8046 113.596 88.6906 102.551L101.191 91.8366C124.482 71.8725 136.128 61.8904 150 61.8904C163.872 61.8904 175.518 71.8725 198.809 91.8366L211.309 102.551C224.195 113.596 230.638 119.119 234.069 126.578C237.5 134.037 237.5 142.523 237.5 159.495V212.5C237.5 236.07 237.5 247.855 230.178 255.178C222.855 262.5 211.07 262.5 187.5 262.5H180M120 262.5V192.5C120 190.614 120 189.672 120.586 189.086C121.172 188.5 122.114 188.5 124 188.5H176C177.886 188.5 178.828 188.5 179.414 189.086C180 189.672 180 190.614 180 192.5V262.5M120 262.5H180";
export const box =
  "M150 262.5V162.5M150 262.5L63.3375 200.598C62.927 200.305 62.7217 200.158 62.6108 199.943C62.5 199.728 62.5 199.475 62.5 198.971V100M150 262.5L236.662 200.598C237.073 200.305 237.278 200.158 237.389 199.943C237.5 199.728 237.5 199.475 237.5 198.971V100M150 162.5L62.5 100M150 162.5L237.5 100M62.5 100L148.838 38.3303C149.399 37.9294 149.68 37.7289 150 37.7289C150.32 37.7289 150.601 37.9294 151.162 38.3303L237.5 100";

export const getIndex = (_, index) => index;

export const useFlubber = (progress, paths) => {
  return useTransform(progress, paths.map(getIndex), paths, {
    mixer: (a, b) => interpolate(a, b, { maxSegmentLength: 0.1 }),
  });
};

export const arrGamepad = [
  "M175 100V78.1231C175 76.6232 175 75.8733 174.576 75.3307 174.153 74.7882 173.425 74.6063 171.97 74.2425L128.03 63.2575C126.575 62.8937 125.847 62.7118 125.424 62.1693 125 61.6267 125 60.8768 125 59.3769V25",
  "M164.5 200H185.5C186.443 200 186.914 200 187.207 199.707 187.5 199.414 187.5 198.943 187.5 198V177C187.5 176.057 187.5 175.586 187.207 175.293 186.914 175 186.443 175 185.5 175H164.5C163.557 175 163.086 175 162.793 175.293 162.5 175.586 162.5 176.057 162.5 177V198C162.5 198.943 162.5 199.414 162.793 199.707 163.086 200 163.557 200 164.5 200Z",
  "M89.5 212.5H110.5C111.443 212.5 111.914 212.5 112.207 212.207 112.5 211.914 112.5 211.443 112.5 210.5V139.5C112.5 138.557 112.5 138.086 112.207 137.793 111.914 137.5 111.443 137.5 110.5 137.5H89.5C88.5572 137.5 88.0858 137.5 87.7929 137.793 87.5 138.086 87.5 138.557 87.5 139.5V210.5C87.5 211.443 87.5 211.914 87.7929 212.207 88.0858 212.5 88.5572 212.5 89.5 212.5Z",
  "M62.5 164.5L62.5 185.5C62.5 186.443 62.5 186.914 62.7929 187.207 63.0858 187.5 63.5572 187.5 64.5 187.5H135.5C136.443 187.5 136.914 187.5 137.207 187.207 137.5 186.914 137.5 186.443 137.5 185.5V164.5C137.5 163.557 137.5 163.086 137.207 162.793 136.914 162.5 136.443 162.5 135.5 162.5H64.5C63.5572 162.5 63.0858 162.5 62.7929 162.793 62.5 163.086 62.5 163.557 62.5 164.5Z",
  "M202 175H223C223.943 175 224.414 175 224.707 174.707 225 174.414 225 173.943 225 173V152C225 151.057 225 150.586 224.707 150.293 224.414 150 223.943 150 223 150H202C201.057 150 200.586 150 200.293 150.293 200 150.586 200 151.057 200 152V173C200 173.943 200 174.414 200.293 174.707 200.586 175 201.057 175 202 175Z",
  "M106.25 250H193.75C223.07 250 237.73 250 247.829 241.546 250.429 239.37 252.756 236.831 254.751 233.995 262.5 222.978 262.5 206.985 262.5 175 262.5 143.015 262.5 127.022 254.751 116.005 252.756 113.169 250.429 110.63 247.829 108.454 237.73 100 223.07 100 193.75 100H106.25C76.9303 100 62.2705 100 52.1714 108.454 49.5715 110.63 47.2443 113.169 45.2493 116.005 37.5 127.022 37.5 143.015 37.5 175 37.5 206.985 37.5 222.978 45.2493 233.995 47.2443 236.831 49.5715 239.37 52.1714 241.546 62.2705 250 76.9303 250 106.25 250Z",
];
export const arrBox = [
  "M150 262.5V162.5",
  "M150 262.5L63.3375 200.598C62.927 200.305 62.7217 200.158 62.6108 199.943 62.5 199.728 62.5 199.475 62.5 198.971V100",
  "M150 262.5L236.662 200.598C237.073 200.305 237.278 200.158 237.389 199.943 237.5 199.728 237.5 199.475 237.5 198.971V100",
  "M150 162.5L62.5 100",
  "M150 162.5L237.5 100",
  "M62.5 100L148.838 38.3303C149.399 37.9294 149.68 37.7289 150 37.7289 150.32 37.7289 150.601 37.9294 151.162 38.3303L237.5 100",
];

export const arrHome = [
  "M120 262.5H112.5C88.9298 262.5 77.1447 262.5 69.8223 255.178 62.5 247.855 62.5 236.07 62.5 212.5V159.495C62.5 142.523 62.5 134.037 65.9308 126.578 69.3615 119.119 75.8046 113.596 88.6906 102.551L101.191 91.8366C124.482 71.8725 136.128 61.8904 150 61.8904 163.872 61.8904 175.518 71.8725 198.809 91.8366L211.309 102.551C224.195 113.596 230.638 119.119 234.069 126.578 237.5 134.037 237.5 142.523 237.5 159.495V212.5C237.5 236.07 237.5 247.855 230.178 255.178 222.855 262.5 211.07 262.5 187.5 262.5H180",
  "M120 262.5V192.5C120 190.614 120 189.672 120.586 189.086 121.172 188.5 122.114 188.5 124 188.5H176C177.886 188.5 178.828 188.5 179.414 189.086 180 189.672 180 190.614 180 192.5V262.5",
  "M120 262.5H180",
  "M120 262.5H112.5C88.9298 262.5 77.1447 262.5 69.8223 255.178 62.5 247.855 62.5 236.07 62.5 212.5V159.495C62.5 142.523 62.5 134.037 65.9308 126.578 69.3615 119.119 75.8046 113.596 88.6906 102.551L101.191 91.8366C124.482 71.8725 136.128 61.8904 150 61.8904 163.872 61.8904 175.518 71.8725 198.809 91.8366L211.309 102.551C224.195 113.596 230.638 119.119 234.069 126.578 237.5 134.037 237.5 142.523 237.5 159.495V212.5C237.5 236.07 237.5 247.855 230.178 255.178 222.855 262.5 211.07 262.5 187.5 262.5H180",
  "M120 262.5V192.5C120 190.614 120 189.672 120.586 189.086 121.172 188.5 122.114 188.5 124 188.5H176C177.886 188.5 178.828 188.5 179.414 189.086 180 189.672 180 190.614 180 192.5V262.5",
  "M120 262.5H180",
];
export const arrUser = [
  "M200 87.5C200 115.114 177.614 137.5 150 137.5 122.386 137.5 100 115.114 100 87.5 100 59.8858 122.386 37.5 150 37.5 177.614 37.5 200 59.8858 200 87.5Z",
  "M66.7237 229.007C74.9872 194.086 109.647 175 145.532 175H154.468C190.354 175 225.013 194.086 233.277 229.007 235.722 239.341 237.4 250.41 237.496 261.5 237.501 262.052 237.052 262.5 236.5 262.5H63.5001C62.9478 262.5 62.4997 262.052 62.5044 261.5 62.6003 250.41 64.2782 239.341 66.7237 229.007Z",
  "M200 87.5C200 115.114 177.614 137.5 150 137.5 122.386 137.5 100 115.114 100 87.5 100 59.8858 122.386 37.5 150 37.5 177.614 37.5 200 59.8858 200 87.5Z",
  "M66.7237 229.007C74.9872 194.086 109.647 175 145.532 175H154.468C190.354 175 225.013 194.086 233.277 229.007 235.722 239.341 237.4 250.41 237.496 261.5 237.501 262.052 237.052 262.5 236.5 262.5H63.5001C62.9478 262.5 62.4997 262.052 62.5044 261.5 62.6003 250.41 64.2782 239.341 66.7237 229.007Z",
  "M200 87.5C200 115.114 177.614 137.5 150 137.5 122.386 137.5 100 115.114 100 87.5 100 59.8858 122.386 37.5 150 37.5 177.614 37.5 200 59.8858 200 87.5Z",
  "M66.7237 229.007C74.9872 194.086 109.647 175 145.532 175H154.468C190.354 175 225.013 194.086 233.277 229.007 235.722 239.341 237.4 250.41 237.496 261.5 237.501 262.052 237.052 262.5 236.5 262.5H63.5001C62.9478 262.5 62.4997 262.052 62.5044 261.5 62.6003 250.41 64.2782 239.341 66.7237 229.007Z",
];

export const blobList = [
  "M23,-22.5C32.6,-13.4,45.1,-6.7,49.8,4.7C54.5,16.1,51.4,32.2,41.8,47.5C32.2,62.9,16.1,77.5,2.8,74.7C-10.4,71.8,-20.8,51.5,-33.3,36.1C-45.8,20.8,-60.4,10.4,-63.3,-2.9C-66.2,-16.2,-57.4,-32.4,-44.9,-41.5C-32.4,-50.6,-16.2,-52.7,-4.8,-47.9C6.7,-43.2,13.4,-31.6,23,-22.5Z",
  "M54.5,-52.5C66.1,-42.9,68,-21.4,62.1,-5.8C56.3,9.8,42.8,19.5,31.2,24.8C19.5,30.1,9.8,30.9,0.5,30.4C-8.9,30,-17.7,28.3,-22.6,23C-27.6,17.7,-28.6,8.9,-33.5,-4.9C-38.4,-18.7,-47.2,-37.3,-42.3,-46.9C-37.3,-56.6,-18.7,-57.1,1.4,-58.5C21.4,-59.8,42.9,-62.1,54.5,-52.5Z",
  "M47.3,-49C59.4,-35.3,65.9,-17.6,66.3,0.5C66.8,18.6,61.3,37.2,49.2,43.7C37.2,50.2,18.6,44.6,5.7,38.9C-7.2,33.2,-14.4,27.4,-30,20.9C-45.6,14.4,-69.7,7.2,-75.6,-5.9C-81.4,-18.9,-69.1,-37.8,-53.4,-51.6C-37.8,-65.3,-18.9,-73.9,-0.6,-73.2C17.6,-72.6,35.3,-62.8,47.3,-49Z",
  "M44.6,-36.1C58,-31.2,69.2,-15.6,70.8,1.5C72.3,18.7,64.2,37.4,50.8,49C37.4,60.6,18.7,65.3,-2.4,67.7C-23.5,70.1,-47,70.3,-56.6,58.7C-66.3,47,-62,23.5,-58.2,3.7C-54.5,-16.1,-51.4,-32.2,-41.8,-37.1C-32.2,-42.1,-16.1,-35.9,-0.2,-35.6C15.6,-35.4,31.2,-41.1,44.6,-36.1Z",
  "M52.9,-51.2C61.6,-44.2,56.8,-22.1,54.6,-2.2C52.5,17.8,52.9,35.5,44.2,52.2C35.5,68.8,17.8,84.3,-2.8,87.1C-23.3,89.8,-46.6,79.9,-60.6,63.2C-74.6,46.6,-79.3,23.3,-72.9,6.4C-66.6,-10.5,-49.1,-21.1,-35.1,-28C-21.1,-34.9,-10.5,-38.2,5.8,-44C22.1,-49.8,44.2,-58.1,52.9,-51.2Z",
  "M52.9,-51.2C61.6,-44.2,56.8,-22.1,54.6,-2.2C52.5,17.8,52.9,35.5,44.2,52.2C35.5,68.8,17.8,84.3,-2.8,87.1C-23.3,89.8,-46.6,79.9,-60.6,63.2C-74.6,46.6,-79.3,23.3,-72.9,6.4C-66.6,-10.5,-49.1,-21.1,-35.1,-28C-21.1,-34.9,-10.5,-38.2,5.8,-44C22.1,-49.8,44.2,-58.1,52.9,-51.2Z",
  "M41.3,-51.2C46.1,-36.6,37.2,-18.3,38.9,1.7C40.6,21.7,52.9,43.4,48.1,49.6C43.4,55.8,21.7,46.6,1.1,45.4C-19.4,44.3,-38.8,51.3,-47.3,45C-55.9,38.8,-53.5,19.4,-55.5,-2C-57.5,-23.4,-63.8,-46.8,-55.3,-61.4C-46.8,-76,-23.4,-81.8,-2.5,-79.2C18.3,-76.7,36.6,-65.8,41.3,-51.2Z",
  "M52.9,-55.5C64,-41.9,65,-21,63.4,-1.6C61.7,17.7,57.4,35.4,46.4,51.4C35.4,67.4,17.7,81.6,-2.6,84.2C-22.9,86.8,-45.9,77.8,-51.5,61.9C-57,45.9,-45.2,22.9,-40.2,5C-35.2,-12.9,-37,-25.9,-31.4,-39.4C-25.9,-52.9,-12.9,-67,4,-71C21,-75,41.9,-69,52.9,-55.5Z",
];

export const reacticon = "M81.6797 34.6094C80.625 34.2578 79.5703 33.9258 78.5156 33.6133C78.6914 32.8906 78.8477 32.168 79.0039 31.4453C81.4062 19.8047 79.8242 10.4492 74.4922 7.36328C69.3555 4.41406 60.9766 7.48047 52.5 14.8633C51.6602 15.5859 50.8398 16.3477 50.0586 17.1094C49.5312 16.6016 48.9844 16.0937 48.4375 15.6055C39.5508 7.71484 30.6445 4.39453 25.3125 7.5C20.1953 10.4687 18.6719 19.2773 20.8203 30.293C21.0352 31.3867 21.2695 32.4609 21.543 33.5547C20.293 33.9062 19.0625 34.2969 17.9102 34.707C7.48047 38.3203 0 44.0234 0 49.9219C0 56.0156 7.96875 62.1289 18.8086 65.8398C19.6875 66.1328 20.5664 66.4258 21.4648 66.6797C21.1719 67.8516 20.918 69.0039 20.6836 70.1953C18.6328 81.0351 20.2344 89.6289 25.3516 92.5781C30.625 95.625 39.4922 92.5 48.125 84.9414C48.8086 84.3359 49.4922 83.7109 50.1758 83.0469C51.0352 83.8867 51.9336 84.6875 52.832 85.4687C61.1914 92.6562 69.4531 95.5664 74.5508 92.6172C79.8242 89.5703 81.543 80.332 79.3164 69.082C79.1406 68.2227 78.9453 67.3437 78.7305 66.4453C79.3555 66.2695 79.9609 66.0742 80.5664 65.8789C91.8359 62.1484 100 56.1133 100 49.9219C100 44.0039 92.3047 38.2617 81.6797 34.6094ZM55.2539 18.0273C62.5195 11.6992 69.2969 9.21875 72.3828 10.9961C75.6836 12.8906 76.9531 20.5469 74.8828 30.6055C74.7461 31.2695 74.6094 31.9141 74.4336 32.5586C70.0977 31.582 65.7031 30.8789 61.2891 30.4883C58.75 26.8555 55.9766 23.3789 52.9688 20.1172C53.7305 19.3945 54.4727 18.7109 55.2539 18.0273ZM32.6562 60.0586C33.6523 61.7578 34.668 63.457 35.7422 65.1172C32.6953 64.7851 29.668 64.2969 26.6797 63.6523C27.5391 60.8398 28.6133 57.9297 29.8633 54.9609C30.7617 56.6797 31.6797 58.3789 32.6562 60.0586ZM26.7383 36.5625C29.5508 35.9375 32.5391 35.4297 35.6445 35.0391C34.6094 36.6602 33.5938 38.3203 32.6367 40C31.6797 41.6602 30.7422 43.3594 29.8633 45.0781C28.6328 42.168 27.5977 39.3164 26.7383 36.5625ZM32.0898 50.0195C33.3789 47.3242 34.7852 44.6875 36.2695 42.0898C37.7539 39.4922 39.3555 36.9727 41.0352 34.4922C43.9648 34.2773 46.9531 34.1602 50 34.1602C53.0469 34.1602 56.0547 34.2773 58.9648 34.4922C60.625 36.9531 62.207 39.4727 63.7109 42.0508C65.2148 44.6289 66.6211 47.2656 67.9492 49.9414C66.6406 52.6367 65.2344 55.293 63.7305 57.9101C62.2461 60.5078 60.6641 63.0273 59.0039 65.5273C56.0938 65.7422 53.0664 65.8398 50 65.8398C46.9336 65.8398 43.9648 65.7422 41.0938 65.5664C39.3945 63.0859 37.793 60.5469 36.2891 57.9492C34.7852 55.3516 33.3984 52.7148 32.0898 50.0195ZM67.3633 60.0195C68.3594 58.3008 69.2969 56.5625 70.2148 54.8047C71.4648 57.6367 72.5586 60.5078 73.5156 63.457C70.4883 64.1406 67.4219 64.668 64.3359 65.0195C65.3906 63.3789 66.3867 61.6992 67.3633 60.0195ZM70.1758 45.0781C69.2578 43.3594 68.3203 41.6406 67.3438 39.9609C66.3867 38.3008 65.3906 36.6602 64.3555 35.0391C67.5 35.4297 70.5078 35.957 73.3203 36.6016C72.4219 39.4922 71.3672 42.3047 70.1758 45.0781ZM50.0391 23.1055C52.0898 25.332 54.0234 27.6758 55.8203 30.0977C51.9531 29.9219 48.0664 29.9219 44.1992 30.0977C46.1133 27.5781 48.0859 25.2344 50.0391 23.1055ZM27.3828 11.1328C30.6641 9.21875 37.9492 11.9531 45.625 18.75C46.1133 19.1797 46.6016 19.6484 47.1094 20.1172C44.082 23.3789 41.2891 26.8555 38.7305 30.4883C34.3164 30.8789 29.9414 31.5625 25.6055 32.5195C25.3516 31.5234 25.1367 30.5078 24.9219 29.4922C23.0859 20.0391 24.2969 12.9102 27.3828 11.1328ZM22.5977 62.6172C21.7773 62.3828 20.9766 62.1289 20.1758 61.8555C16.0156 60.5469 11.2891 58.4766 7.87109 55.7617C5.89844 54.3945 4.57031 52.2852 4.19922 49.9219C4.19922 46.3477 10.3711 41.7773 19.2773 38.6719C20.3906 38.2812 21.5234 37.9297 22.6562 37.5977C23.9844 41.8359 25.5859 45.9961 27.4414 50.0195C25.5664 54.1016 23.9453 58.3203 22.5977 62.6172ZM45.3711 81.7578C42.1484 84.707 38.418 87.0508 34.3555 88.6523C32.1875 89.6875 29.6875 89.7851 27.4609 88.9062C24.3555 87.1094 23.0664 80.2148 24.8242 70.9375C25.0391 69.8437 25.2734 68.75 25.5469 67.6758C29.9219 68.6133 34.3359 69.2578 38.8086 69.5898C41.3867 73.2422 44.2188 76.7383 47.2461 80.0195C46.6211 80.625 45.9961 81.2109 45.3711 81.7578ZM50.1562 77.0117C48.1641 74.8633 46.1719 72.4805 44.2383 69.9219C46.1133 70 48.0469 70.0391 50 70.0391C52.0117 70.0391 53.9844 70 55.9375 69.9023C54.1406 72.3828 52.207 74.7461 50.1562 77.0117ZM75.6836 82.8711C75.5078 85.2539 74.3359 87.4805 72.4609 88.9844C69.3555 90.7812 62.7344 88.4375 55.5859 82.3047C54.7656 81.6016 53.9453 80.8398 53.1055 80.0586C56.0938 76.7578 58.8477 73.2617 61.3477 69.5898C65.8203 69.2187 70.2734 68.5351 74.668 67.5391C74.8633 68.3398 75.0391 69.1406 75.1953 69.9219C76.1523 74.1406 76.3086 78.5351 75.6836 82.8711ZM79.2383 61.875C78.6914 62.0508 78.1445 62.2266 77.5781 62.3828C76.2109 58.125 74.5312 53.9648 72.5977 49.9219C74.4727 45.9375 76.0547 41.8359 77.3828 37.6367C78.3984 37.9297 79.375 38.2422 80.3125 38.5547C89.4141 41.6797 95.8008 46.3281 95.8008 49.8828C95.8008 53.7109 88.9844 58.6523 79.2383 61.875ZM50 58.9453C54.9414 58.9453 58.9453 54.9414 58.9453 50C58.9453 45.0586 54.9414 41.0547 50 41.0547C45.0586 41.0547 41.0547 45.0586 41.0547 50C41.0547 54.9414 45.0586 58.9453 50 58.9453Z"
export const aim = "M25 45.8333C25 55.025 32.475 62.5 41.6667 62.5C49.0042 62.5 55.175 57.7041 57.3958 51.1083L66.6625 45.7291L66.6667 45.8333C66.6667 59.6416 55.475 70.8333 41.6667 70.8333C27.8583 70.8333 16.6667 59.6416 16.6667 45.8333C16.6667 32.025 27.8583 20.8333 41.6667 20.8333C46.1833 20.8333 50.4083 22.05 54.0625 24.1416L44.8542 29.4875C43.8208 29.2875 42.7583 29.1666 41.6667 29.1666C32.475 29.1666 25 36.6416 25 45.8333ZM41.6667 37.5C37.0625 37.5 33.3333 41.2333 33.3333 45.8333C33.3333 50.4333 37.0625 54.1666 41.6667 54.1666C46.2708 54.1666 50 50.4333 50 45.8333L49.9917 45.7708L63.9917 37.6458C68.0583 35.2916 75.2583 36.2458 79.4542 38.3083L100 26.3791L86.8417 19.8416L87.5458 4.70829L66.9417 16.6666C66.65 21.3375 63.8833 28.0666 59.8375 30.4208L45.7417 38.6041C44.5333 37.925 43.1542 37.5 41.6667 37.5ZM83.1542 49.4083C81.9 47.3958 78.7125 44.9875 74.9792 45.4625L75 45.8333C75 64.2124 60.0458 79.1666 41.6667 79.1666C23.2875 79.1666 8.33333 64.2124 8.33333 45.8333C8.33333 27.4541 23.2875 12.5 41.6667 12.5C47.8125 12.5 53.5542 14.2 58.5042 17.1125C59.8958 14.6708 60.2875 10.6791 59.1125 8.02913C53.8 5.57496 47.9042 4.16663 41.6667 4.16663C18.6542 4.16663 0 22.8208 0 45.8333C0 58.1583 5.37917 69.1958 13.8833 76.8249L8.4375 93.7083C7.925 95.3041 9.89583 96.5374 11.1042 95.3708L23.6125 83.3374C29.0792 85.9791 35.1875 87.4999 41.6667 87.4999C48.15 87.4999 54.2625 85.9916 59.7292 83.3499L72.2292 95.3749C73.4375 96.5416 75.4083 95.3041 74.8958 93.7124L69.4542 76.8374C77.1167 69.9541 82.225 60.2833 83.1542 49.4083Z"
export const code = "M57.0147 19.0064C56.0644 19.0513 55.1543 19.3986 54.4163 19.9986C53.6791 20.5986 53.1535 21.4195 52.9163 22.3405L38.4692 75.6829C38.0537 77.2217 38.4909 78.8642 39.6149 79.9938C40.7397 81.1232 42.3814 81.5666 43.921 81.1573C45.4613 80.748 46.6667 79.548 47.0822 78.0094L61.5294 24.6669V24.6677C61.9239 23.2856 61.6263 21.798 60.7302 20.674C59.8341 19.5499 58.4496 18.929 57.0146 19.0065L57.0147 19.0064ZM31.1075 24.5629C30.1052 24.5799 29.1386 24.935 28.3642 25.5698L1.69299 46.6846L1.69221 46.6853C0.624016 47.528 0 48.8141 0 50.1752C0 51.5364 0.624016 52.8225 1.69221 53.6659L28.3634 74.7806H28.3642C29.282 75.5837 30.489 75.9752 31.7037 75.862C32.9184 75.7488 34.033 75.1418 34.7865 74.1829C35.5408 73.224 35.8671 71.9969 35.6904 70.7907C35.5137 69.5837 34.8486 68.5024 33.8509 67.8001L11.5892 50.1925L33.8509 32.551C34.8517 31.7921 35.485 30.6448 35.5935 29.3937C35.702 28.1426 35.2764 26.9038 34.4222 25.9836C33.5672 25.0627 32.3633 24.5472 31.1076 24.5635L31.1075 24.5629ZM68.7886 24.5629C67.5444 24.5761 66.363 25.1102 65.5313 26.0342C64.6987 26.959 64.2925 28.1899 64.4096 29.428C64.5274 30.6668 65.1576 31.7993 66.1491 32.5504L88.4108 50.1919L66.1491 67.7995C65.1515 68.5018 64.4863 69.5831 64.3096 70.79C64.1329 71.9962 64.4592 73.2234 65.2135 74.1823C65.9669 75.1412 67.0817 75.7481 68.2963 75.8613C69.511 75.9745 70.718 75.583 71.6358 74.7799L98.307 53.6652H98.3078C99.376 52.8218 100 51.5359 100 50.1746C100 48.8132 99.376 47.5273 98.3078 46.6847L71.6366 25.57L71.6358 25.5692C70.8335 24.9118 69.8257 24.5552 68.7885 24.5622L68.7886 24.5629Z"
export const cloud = "M50 8.33333C64.3875 8.33333 74.5458 19.9875 73.1958 36.5833C80.4667 36.3917 91.6667 39.7125 91.6667 52.0833C91.6667 60.125 85.125 66.6667 77.0833 66.6667H22.9167C14.875 66.6667 8.33333 60.125 8.33333 52.0833C8.33333 40.4292 18.6625 36.1125 26.8042 36.5833C26.1083 19.0083 36.0042 8.33333 50 8.33333ZM50 0C33.3083 0 19.7208 13.0875 18.8375 29.55C8.12917 31.4792 0 40.825 0 52.0833C0 64.7375 10.2625 75 22.9167 75H77.0833C89.7375 75 100 64.7375 100 52.0833C100 40.825 91.8708 31.4792 81.1625 29.55C80.2792 13.0875 66.6917 0 50 0ZM33.3333 100V91.6667H45.8333V83.3333H54.1667V91.6667H66.6667V100H33.3333ZM70.8333 91.6667V100H83.3333V91.6667H70.8333ZM29.1667 91.6667H16.6667V100H29.1667V91.6667Z"

/** GOOD TEST ONE  */

// import { useState, useEffect } from "react";
// import "./app.sass";
// import {
//   gamepad,
//   user,
//   home,
//   box,
//   arrGamepad,
//   arrBox,
//   arrUser,
//   arrHome,
// } from "./icons/Paths";

// import { useSpring, animated, Spring } from "@react-spring/web";
// import { interpolate, splitPathString, interpolateAll } from "flubber";
// const paths = [arrGamepad, arrBox, arrHome, arrUser];

// function App() {
//   /** SHAPE TRANSFORM NOT TOUCH */
//   // const [activeIndex, setActiveIndex] = useState(0);
//   // const [interpolators, setInterpolators] = useState({
//   //   path: interpolateAll(paths[0], paths[1]),
//   // });
//   // const animationProps = useSpring({
//   //   from: { x: 0 },
//   //   to: {
//   //     x: 1,
//   //   },
//   //   config: {
//   //     duration: 800,
//   //   },
//   //   reset: true,
//   // });
//   // const updateShape = () => {
//   //   setActiveIndex((prev) => {
//   //     if (prev >= paths.length - 1) {
//   //       setInterpolators({
//   //         path: interpolateAll(paths[prev], paths[0], {
//   //           maxSegmentLength: 5,
//   //         }),
//   //       });
//   //       return 0;
//   //     } else {
//   //       setInterpolators({
//   //         path: interpolateAll(paths[prev], paths[prev + 1], {
//   //           maxSegmentLength: 5,
//   //         }),
//   //       });
//   //       return prev + 1;
//   //     }
//   //   });
//   // };

//   /**RANDOM VALUES TO LINES */

//   const [activeIndex, setActiveIndex] = useState(0);
//   const [prevshape, setPrevshape] = useState(paths[0]);
//   const [pause, setPause] = useState(false);
//   const [interpolators, setInterpolators] = useState({
//     prevShape: paths[1],
//     path: interpolateAll(paths[0], paths[1]),
//   });
//   const animationProps = useSpring({
//     from: { x: 0 },
//     to: {
//       x: 1,
//     },
//     config: {
//       duration: 2000,
//     },
//     reset: true,
//     onRest: () => {
//       updateShape();
//     },
//     // onResolve:()=>{console.log('hey resolve')}
//   });
//   const updateShape = () => {
//     // setActiveIndex((prev) => {
//     //   if (prev >= paths.length - 1) {
//     //     setInterpolators(
//     //       interpolateAll(paths[prev], paths[0], { maxSegmentLength: 5 })
//     //     );
//     //     return 0;
//     //   } else {
//     //     setInterpolators(
//     //       interpolateAll(paths[prev], paths[prev + 1], {
//     //         maxSegmentLength: 5,
//     //       })
//     //     );
//     //     return prev + 1;
//     //   }
//     // });

//     if (!pause) {
//       let nextShape = randomShape();
//       setInterpolators((prev) => ({
//         prevShape: nextShape,
//         path: interpolateAll(prev.prevShape, nextShape),
//       }));
//     }
//   };

//   const rand = (min, max) => {
//     return Math.floor(Math.random() * (max - min) + min);
//   };

// const randomLine = () => {
//   let p1 = `${rand(0, 100)} ${rand(0, 150)}`;
//   let p2 = `${rand(100, 200)} ${rand(0, 150)}`;
//   let p3 = `${rand(200, 300)} ${rand(0, 150)}`;
//   let p4 = `${rand(200,300)} ${rand(150, 300)}`;
//   let p5 = `${rand(100, 200)} ${rand(150, 300)}`;
//   let p6 = `${rand(0, 100)} ${rand(150, 300)}`;

//   return `M ${p1} L ${p2} L ${p3} L ${p4} L ${p5} L ${p6} L ${p1} `;
// };

//   const randomShape = () => {
//     // let lineC = `M ${p1} L ${p2} L ${p3} L ${p4} L ${p5} L ${p6} L ${p1} `;
//     // let line1 = `M ${p1} L ${p2}`;
//     let line1 = randomLine();
//     let line2 = randomLine();
//     let line3 = randomLine();
//     let line4 = randomLine();
//     let line5 = randomLine();
//     let line6 = randomLine();

//     // console.log([line1,line2,line3,line4,line5,line6])
//     return [line1, line2, line3, line4, line5, line6];
//   };

//   useEffect(() => {
//     updateShape();
//   }, []);

//   // console.log(randomShape);

//   const stop = () => {
//     setPause(!pause);
//     let aux = Math.floor(Math.random() * 3)
//     setInterpolators((prev) => ({
//       prevShape: paths[aux],
//       path: interpolateAll(prev.prevShape, paths[aux]),
//     }));
//     // updateShape();
//   };

//   const leave = ()=>{
//     setPause(!pause);
//     let nextShape = randomShape();
//     setInterpolators((prev) => ({
//       prevShape: nextShape,
//       path: interpolateAll(prev.prevShape, nextShape),
//     }));
//   }

//   return (
//     <div className="root">
//       <div className="box">
//         <svg width="300" height="300" onClick={stop} onMouseEnter={stop} onMouseLeave={leave} >
//           {interpolators.path.map((item, index) => (
//             <animated.path
//               key={index}
//               d={animationProps.x.to(item)}
//               stroke="#F2C964"
//               fill="none"
//               strokeWidth={2}
//               strokeLinejoin="round"
//             ></animated.path>
//           ))}
//         </svg>
//       </div>
//     </div>
//   );
// }

// export default App;
// /**
//  * {interpolators.path.map((item, index) => (
//             <animated.path
//               key={index}
//               d={animationProps.x.to(item)}
//               stroke="#fff"
//               fill="none"
//               strokeWidth={4}
//             ></animated.path>
//           ))}
//  */
